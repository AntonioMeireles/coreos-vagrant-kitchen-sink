    - name: rudder-build.service
      command: start
      content: |
        [Unit]
        Requires=docker.service
        After=docker.service
        Before=rudder.service

        [Service]
        ExecStart=/usr/bin/git clone https://github.com/coreos/rudder /opt/rudder
        ExecStart=/usr/bin/docker run -v /opt/rudder:/opt/rudder -i --name rudder-build google/golang /bin/bash -xc "cd /opt/rudder && ./build"
        RemainAfterExit=yes
        Type=oneshot
    - name: rudder.service
      command: start
      enable: true
      content: |
        [Unit]
        Requires=etcd.service network.target
        ConditionFileIsExecutable=/opt/rudder/bin/rudder
        After=rudder-build.service

        [Service]
        ExecStartPre=-/usr/bin/etcdctl set /coreos.com/network/config '{"Network":"172.30.0.0/16"}'
        ExecStart=/opt/rudder/bin/rudder
        Restart=on-failure
        TimeoutSec=10
        RestartSec=5

        [Install]
        WantedBy=multi-user.target
    - name: docker-rudder.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=Docker Service using Rudder
        Requires=rudder.service
        Conflicts=docker.service
        After=rudder.service
        ConditionFileNotEmpty=/run/rudder/subnet.env

        [Service]
        EnvironmentFile=/run/rudder/subnet.env
        ExecStartPre=-/usr/bin/ip link set dev docker0 down
        ExecStartPre=-/usr/sbin/brctl delbr docker0
        ExecStart=/usr/bin/docker -d -s=btrfs -H fd:// --bip=${RUDDER_SUBNET} --mtu=${RUDDER_MTU}
        Restart=on-failure
        TimeoutSec=10
        RestartSec=5

        [Install]
        WantedBy=multi-user.target
    - name: docker-rudder-tcp.socket
      command: start
      enable: true
      content: |
        [Unit]
        Description=Docker Socket for the API
        Conflicts=docker-tcp.socket
        After=docker-rudder.service

        [Socket]
        ListenStream=2375
        Service=docker-rudder.service
        BindIPv6Only=both

        [Install]
        WantedBy=sockets.target
