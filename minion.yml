    - name: rudder-build.service
      command: start
      content: |
        [Unit]
        After=docker.service

        [Service]
        ExecStart=/usr/bin/git clone https://github.com/coreos/rudder /opt/rudder
        ExecStart=/usr/bin/docker run -v /opt/rudder:/opt/rudder -i -t --name rudder-build google/golang /bin/bash -c "cd /opt/rudder && ./build"
        ExecStart=-/usr/bin/docker rm rudder-build
        RemainAfterExit=yes
        Type=oneshot
    - name: rudder.service
      command: start
      enable: true
      content: |
        [Unit]
        Requires=etcd.service rudder-build.service network.target
        ConditionFileIsExecutable=/opt/rudder/bin/rudder
        After=rudder-build.service

        [Service]
        ExecStartPre=-/usr/bin/etcdctl set /coreos.com/network/config '{"Network":"172.30.0.0/16"}'
        ExecStart=/opt/rudder/bin/rudder
        Restart=on-failure
        RestartSec=5

        [Install]
        WantedBy=multi-user.target
    - name: docker-rudder.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=Docker Service using Rudder
        Requires=rudder.service
        After=rudder.service
        Conflicts=docker.socket docker.service

        [Service]
        EnvironmentFile=/run/rudder/subnet.env
        ExecStartPre=-/usr/bin/ip link set dev docker0 down
        ExecStartPre=-/usr/sbin/brctl delbr docker0
        ExecStartPre=-/usr/bin/cat /run/rudder/subnet.env
        ExecStartPre=-/usr/bin/bash -xc 'while ! grep RUDDER_SUBNET /run/rudder/subnet.env; do sleep 5; done'
        ExecStart=/usr/bin/docker -d -s=btrfs -H fd:// --bip=${RUDDER_SUBNET} --mtu=${RUDDER_MTU}
        Restart=on-failure
        RestartSec=5

        [Install]
        WantedBy=multi-user.target
    - name: docker-rudder-tcp.socket
      command: start
      enable: true
      content: |
        [Unit]
        Description=Docker Socket for the API

        [Socket]
        ListenStream=2375
        Service=docker-rudder.service
        BindIPv6Only=both

        [Install]
        WantedBy=sockets.target
    - name: download-kubernetes.service
      command: start
      enable: true
      content: |
        [Unit]
        After=network-online.target
        Before=kubelet.service
        Before=proxy.service
        Description=Download Kubernetes Binaries
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=network-online.target

        [Service]
        ExecStart=/usr/bin/wget -N -P /opt/bin http://storage.googleapis.com/kubernetes/kubelet
        ExecStart=/usr/bin/wget -N -P /opt/bin http://storage.googleapis.com/kubernetes/proxy
        ExecStart=/usr/bin/chmod +x /opt/bin/kubelet
        ExecStart=/usr/bin/chmod +x /opt/bin/proxy
        RemainAfterExit=yes
        Type=oneshot
    - name: proxy.service
      command: start
      enable: true
      content: |
        [Unit]
        After=etcd.service
        After=download-kubernetes.service
        ConditionFileIsExecutable=/opt/bin/proxy
        Description=Kubernetes Proxy
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Wants=etcd.service
        Wants=download-kubernetes.service

        [Service]
        ExecStart=/opt/bin/proxy --etcd_servers=http://127.0.0.1:4001 --logtostderr=true
        Restart=always
        RestartSec=10

        [Install]
        WantedBy=multi-user.target
